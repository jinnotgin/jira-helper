{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Card.svelte",
    "Divider.svelte",
    "IssueBrowser.svelte",
    "NumberInput.svelte",
    "Search.svelte",
    "SprintList.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import _ from \"lodash\";\n\n  import {\n    issues,\n    sprints,\n    epics,\n    activeSearchTerm,\n    activeSprintFilter,\n    activeIssueId,\n    ready\n  } from \"./stores.js\";\n\n  import IssuesList from \"./IssuesList.svelte\";\n  import Search from \"./Search.svelte\";\n  import IssueBrowser from \"./IssueBrowser.svelte\";\n  export let name;\n\n  import { get_rapidBoard } from \"./api.js\";\n\n  const _refreshDataSource = () => {\n    get_rapidBoard().then(data => {\n      //   console.log(data);\n\n      const keyedArray = arrayItem =>\n        arrayItem.reduce(\n          (accumulator, currentValue) => {\n            const { id } = currentValue;\n            const keyValue = {};\n            keyValue[id] = currentValue;\n\n            const { _sequence } = accumulator;\n            _sequence.push(id);\n\n            return { ...accumulator, ...keyValue, _sequence };\n          },\n          { _sequence: [] }\n        );\n\n      const process = keyName => {\n        const array = _.get(data, keyName, []);\n        return keyedArray(array);\n      };\n\n      const issuesData = process(\"issues\");\n\n      issues.set(issuesData);\n      sprints.set(process(\"sprints\"));\n      epics.set(process(\"epicData.epics\"));\n\n      ready.set(true);\n      console.log(\"Refreshing data source...\");\n      console.log({ $issues, $sprints, $epics });\n    });\n  };\n  let timeout_refreshDataSource;\n  const refreshDataSource = () => {\n\t  clearTimeout(timeout_refreshDataSource);\n\t  _refreshDataSource();\n\t  timeout_refreshDataSource = setTimeout(refreshDataSource, 60 * 1000);\n  }\n  refreshDataSource();\n\n  $: orderedSprints = $sprints._sequence\n    .filter(id => $sprints[id].issuesIds.length > 0)\n    .map(id => $sprints[id]);\n</script>\n\n<style>\n  main {\n    padding: 0.5em;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    height: calc(100vh - 1em - 60px);\n  }\n\n  section.toolbar {\n    display: flex;\n  }\n\n  section.content {\n    display: flex;\n    height: 100%;\n  }\n\n  .issuesList {\n    flex: 1;\n    overflow: scroll;\n    margin-right: 0.5em;\n  }\n  .issueBrowser {\n    flex: 3;\n    margin-left: 0.5em;\n  }\n\n  .search {\n    flex: 1;\n    margin-right: 8px;\n  }\n  .sprintSelect {\n    flex-basis: 300px;\n  }\n  .sprintSelect select {\n    width: 100%;\n  }\n</style>\n\n<main>\n  <section class=\"toolbar\">\n    <section class=\"search\">\n      <Search />\n    </section>\n    <section class=\"sprintSelect\">\n      <select bind:value={$activeSprintFilter}>\n        <option value=\"\" selected>All</option>\n        {#each orderedSprints as sprint (sprint.id)}\n          <option value={sprint.id}>{sprint.name}</option>\n        {/each}\n      </select>\n    </section>\n\n  </section>\n\n  <section class=\"content\">\n\n    {#if $ready}\n      <section class=\"issuesList\">\n        <IssuesList on:refreshDataSource={refreshDataSource} />\n\n      </section>\n      <section class=\"issueBrowser\">\n        <IssueBrowser />\n      </section>\n    {:else}\n      <span>Loading...</span>\n    {/if}\n\n  </section>\n</main>\n",
    "<script>\n  export let type = \"default\";\n  export let id, name, url, urlName, tooltipText, active, selected, onClick;\n</script>\n\n<div class=\"card\" class:active class:selected class:addNew={type === \"addNew\"} on:click={onClick}>\n  {#if type === \"addNew\"}\n    <div class=\"content\">\n      <span>Add new item...</span>\n    </div>\n  {:else}\n    <div class=\"header\">\n      <div class=\"headerName\">\n        <a href={url} title={tooltipText} target=\"_blank\">{urlName}</a>\n      </div>\n      <slot />\n    </div>\n    <div class=\"content\">\n      <span>{name}</span>\n    </div>\n  {/if}\n</div>\n\n<style>\n  div.card {\n    border: 2px solid #bbb;\n    border-radius: 8px;\n    padding: 1em 0.5em;\n    background: #eee;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n  }\n\n  div.card.selected {\n    background: #dbf6ff;\n  }\n\n  div.card.active {\n    background: #b6edff;\n    border: 2px solid #4dbdff;\n  }\n\n  div.header {\n    display: flex;\n    flex-direction: row;\n  }\n\n  div.headerName {\n    flex: 1;\n  }\n\n  div.card.addNew {\n    opacity: 0.8;\n    border: none;\n  }\n\n  div.card.addNew div.content {\n    text-align: center;\n  }\n\n</style>",
    "<script>\n  import Hoverable from \"./Hoverable.svelte\";\n  export let disabled = false;\n  export let onClick;\n\n  const checkValidClick = (event, active) => {\n    if (!disabled && active) onClick(event);\n  };\n</script>\n\n<style>\n  div.container {\n    padding: 6px;\n  }\n  hr.divider {\n    margin: 0;\n    border: 0;\n    height: 2px;\n    background: #ff9000;\n    opacity: 0;\n  }\n\n  div.container.active {\n    cursor: pointer;\n  }\n  div.container.active hr.divider {\n    opacity: 1;\n  }\n</style>\n\n{#if disabled}\n  <div class=\"container\">\n    <hr class=\"divider\" />\n  </div>\n{:else}\n  <Hoverable requireCtrlKey={true} let:hovering={active}>\n    <div\n      class=\"container\"\n      class:active\n      on:click={event => checkValidClick(event, active)}>\n      <hr class=\"divider\" />\n    </div>\n  </Hoverable>\n{/if}\n",
    "<script>\n  import _ from 'lodash';\n  import {\n    issues,\n    activeIssueId,\n  } from \"./stores.js\";\n\n  $: activeIssue = _.get($issues, `[${$activeIssueId}]`, {});\n\n  $: key = _.get(activeIssue, 'key', false);\n  $: statusUrl = _.get(activeIssue, 'statusUrl', false);\n  \n  $: activeIssueUrl = !!key ? `${statusUrl}browse/${key}` : '';\n</script>\n\n<style>\n  iframe {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n\n<iframe class=\"issue-browser\" src={activeIssueUrl} title=\"Issue Browser\" />\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n  \n  export let value;\n\n  const onKeyupHandler = (event) => {\n    if (event.code == \"Enter\") {\n      event.preventDefault();\n\n      dispatch('valueChanged', {\n        value: event.target.value,\n      });\n    }\n  }\n</script>\n\n<input\n  class=\"numberInput custom-numberInput\"\n  type=\"number\"\n  step=\"any\"\n  value={value}\n  on:keyup|preventDefault={onKeyupHandler}\n/>\n\n<style>\n  input.numberInput {\n    width: 5ch;\n    margin: 0;\n    -moz-appearance: textfield;\n  }\n\n  input.numberInput:disabled {\n    background: white;\n    color: #666;\n    cursor: not-allowed;\n  }\n\n  input.numberInput::-webkit-outer-spin-button,\n  input.numberInput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n</style>",
    "<script>\n  import { activeSearchTerm } from \"./stores.js\";\n\n  import debounce from \"lodash/debounce\";\n\n  const handleInput = debounce(e => {\n    activeSearchTerm.set(e.target.value);\n  }, 500);\n</script>\n\n<style>\n  input {\n    width: 100%;\n  }\n</style>\n\n<input on:input={handleInput} placeholder=\"Search for an issue...\" />\n",
    "<script>\n  import Card from \"./Card.svelte\";\n  import NumberInput from \"./NumberInput.svelte\";\n  import Divider from \"./Divider.svelte\";\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  import { slide, fade } from \"svelte/transition\";\n\n  export let sprintId,\n    header,\n    items,\n    onItemClick,\n    onNumberSubmit,\n    userCanToggleVisibility,\n    isSearching;\n  let userToggleVisible = false;\n\n  const onToggleClick = () => {\n    if (userCanToggleVisibility) {\n      userToggleVisible = !userToggleVisible;\n    }\n  };\n\n  const handleKeyup = event => {\n    if (event.code == \"Enter\") {\n      event.preventDefault();\n\n      const itemId = event.target.dataset.itemid;\n      const value = event.target.value;\n      console.log({ itemId, value });\n\n      onNumberSubmit(itemId, value);\n    }\n  };\n\n  const addItem = (insertAt = \"end\") => {\n    const title = window.prompt(\"Title of issue:\", \"\");\n    if (title === null) return false;\n    dispatch(\"createNewIssue\", {\n      sprintId,\n      title,\n      insertAt\n    });\n  };\n\n  const triggerMoveIssues = (moveMode, referenceIssueId) => {\n    dispatch(\"moveIssues\", {\n      sprintId,\n      moveMode,\n      referenceIssueId\n    });\n  };\n</script>\n\n<style>\n  div.container {\n    text-align: left;\n    padding: 0.25em;\n    margin: 0 auto;\n  }\n\n  .header {\n    display: flex;\n    cursor: pointer;\n\n    margin: 0 0 0.75em 0;\n  }\n  .header .toggle {\n    margin-right: 8px;\n    user-select: none;\n    height: 1.3em;\n    transition: all 0.2s ease-out;\n    transform: rotate(-90deg);\n  }\n  .header .toggle.expanded {\n    transform: rotate(0deg);\n  }\n  h2 {\n    margin: 0;\n    padding: 0;\n    font-size: 2em;\n    font-weight: 200;\n    user-select: none;\n  }\n\n  ol {\n    list-style: none;\n    padding: 0;\n  }\n\n  ol li {\n    margin: 0;\n  }\n\n  ol li::before {\n    display: inline-block;\n    margin-right: 0.2rem;\n  }\n\n  :global(.custom-numberInput) {\n    margin-top: -0.5em !important;\n  }\n</style>\n\n{#if items.length > 0}\n  <div class=\"container\">\n    <div class=\"header\" on:click={onToggleClick}>\n      {#if userCanToggleVisibility}\n        <h2 class=\"toggle\" class:expanded={userToggleVisible} in:fade>â–¼</h2>\n      {/if}\n      <h2>{header}</h2>\n    </div>\n    {#if (userCanToggleVisibility && userToggleVisible) || !userCanToggleVisibility}\n      <ol out:slide|local>\n        {#if items.length > 0 && !isSearching}\n          <li>\n            <Card type=\"addNew\" onClick={() => addItem('start')} />\n          </li>\n          <Divider onClick={() => triggerMoveIssues('before', items[0].id)} />\n        {/if}\n        {#each items as item (item.id)}\n          {#if !item._hidden}\n            <li>\n              <Card\n                id={item.id}\n                name={item._name}\n                url={item._url}\n                urlName={item._prefix}\n                tooltipText={item._tooltip}\n                active={item._active}\n                selected={item._selected}\n                onClick={event => onItemClick(event, item.id)}>\n                <NumberInput\n                  value={item._numberValue}\n                  on:valueChanged={e => {\n                    onNumberSubmit(item.id, e.detail.value);\n                  }} />\n              </Card>\n              <Divider\n                onClick={() => triggerMoveIssues('after', item.id)}\n                disabled={isSearching} />\n            </li>\n          {/if}\n        {/each}\n        {#if !isSearching}\n          <li>\n            <Card type=\"addNew\" onClick={addItem} />\n          </li>\n        {/if}\n      </ol>\n    {/if}\n  </div>\n{/if}\n"
  ],
  "names": [],
  "mappings": "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"
}